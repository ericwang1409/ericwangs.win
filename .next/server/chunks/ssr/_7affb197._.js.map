{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/eric3/LocalDocuments/ericwangs.win/app/page.tsx"],"sourcesContent":["import { BlogPosts } from 'app/components/posts'\n\nexport default function Page() {\n  return (\n    <section>\n      <h1 className=\"mb-8 text-2xl font-semibold tracking-tighter\">\n        Eric Wang\n      </h1>\n      <p className=\"mb-4\">\n        {`I'm a Vim enthusiast and tab advocate, finding unmatched efficiency in\n        Vim's keystroke commands and tabs' flexibility for personal viewing\n        preferences. This extends to my support for static typing, where its\n        early error detection ensures cleaner code, and my preference for dark\n        mode, which eases long coding sessions by reducing eye strain.`}\n      </p>\n      <div className=\"my-8\">\n        <BlogPosts />\n      </div>\n    </section>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BAA+C;;;;;;0BAG7D,8OAAC;gBAAE,WAAU;0BACV,CAAC;;;;sEAI4D,CAAC;;;;;;0BAEjE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;;;;;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/eric3/LocalDocuments/ericwangs.win/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/eric3/LocalDocuments/ericwangs.win/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAEgG,EAAC;;;;;;;;AASvH,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA,CAED;YAAA,WAAc,0CAA0C;kBAAE,QAAA,CAAA;gBAAA,QAAA;oBAAwB,IAAA;oBAAA;iBAAA;YAAsB;SAAC;IAEzG;IAAA,yDAA4D;QAC5D,KAAO,KAAA,CAAMC;QAAAA,QAAc,EAAA;YAAA,CAAIX,GAAAA,cAAmB;YAAA;SAAA;UAChDY,WAAAA;YAAY,IAAA;YAAA;SAAA;cACVC,MAAMZ,CAAAA;YAAAA,IAAAA,EAAUa,QAAQ;YAAA;SAAA;cACxBC,MAAM,IAAA;YAAA,IAAA;YAAA;SAAA;;OACNC,UAAU;QACV,MAAA;IAAA;CAAA,WAA2C;;;IAK7CI,EAAAA,QAAU,eAAA,sBAAA,CAAA;QACRC,YAAYnB,YAAAA,sBAAAA,CAAAA;AACd,MAAA,eAAA;IACA,SAAA","ignoreList":[0],"debugId":null}}]
}