{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/eric3/LocalDocuments/ericwangs.win/app/rss/route.ts"],"sourcesContent":["import { baseUrl } from 'app/sitemap'\nimport { getBlogPosts } from 'app/blog/utils'\n\nexport async function GET() {\n  let allBlogs = await getBlogPosts()\n\n  const itemsXml = allBlogs\n    .sort((a, b) => {\n      if (new Date(a.metadata.publishedAt) > new Date(b.metadata.publishedAt)) {\n        return -1\n      }\n      return 1\n    })\n    .map(\n      (post) =>\n        `<item>\n          <title>${post.metadata.title}</title>\n          <link>${baseUrl}/blog/${post.slug}</link>\n          <description>${post.metadata.summary || ''}</description>\n          <pubDate>${new Date(\n            post.metadata.publishedAt\n          ).toUTCString()}</pubDate>\n        </item>`\n    )\n    .join('\\n')\n\n  const rssFeed = `<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n  <rss version=\"2.0\">\n    <channel>\n        <title>My Portfolio</title>\n        <link>${baseUrl}</link>\n        <description>This is my portfolio RSS feed</description>\n        ${itemsXml}\n    </channel>\n  </rss>`\n\n  return new Response(rssFeed, {\n    headers: {\n      'Content-Type': 'text/xml',\n    },\n  })\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGO,eAAe;IACpB,IAAI,WAAW,MAAM;IAErB,MAAM,WAAW,SACd,IAAI,CAAC,CAAC,GAAG;QACR,IAAI,IAAI,KAAK,EAAE,QAAQ,CAAC,WAAW,IAAI,IAAI,KAAK,EAAE,QAAQ,CAAC,WAAW,GAAG;YACvE,OAAO,CAAC;QACV;QACA,OAAO;IACT,GACC,GAAG,CACF,CAAC,OACC,CAAC;iBACQ,EAAE,KAAK,QAAQ,CAAC,KAAK,CAAC;gBACvB,EAAE,QAAQ,MAAM,EAAE,KAAK,IAAI,CAAC;uBACrB,EAAE,KAAK,QAAQ,CAAC,OAAO,IAAI,GAAG;mBAClC,EAAE,IAAI,KACb,KAAK,QAAQ,CAAC,WAAW,EACzB,WAAW,GAAG;eACX,CAAC,EAEX,IAAI,CAAC;IAER,MAAM,UAAU,CAAC;;;;cAIL,EAAE,QAAQ;;QAEhB,EAAE,SAAS;;QAEX,CAAC;IAEP,OAAO,IAAI,SAAS,SAAS;QAC3B,SAAS;YACP,gBAAgB;QAClB;IACF;AACF","debugId":null}}]
}